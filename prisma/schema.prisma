generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Match {
  id         String      @id @default(uuid())
  map        String
  rounds     Round[]
  halves     Half[]
  winner     String
  scoreboard Scoreboard?
}

model Half {
  id            String  @id @default(uuid())
  matchId       String
  match         Match   @relation(fields: [matchId], references: [id])
  terroristTeam String
  ctTeam        String
  rounds        Round[]
}

model Round {
  id           String        @id @default(uuid())
  number       Int
  winner       String
  matchId      String
  match        Match         @relation(fields: [matchId], references: [id])
  halfId       String
  half         Half          @relation(fields: [halfId], references: [id])
  winMethod    String
  kills        Kill[]
  assists      Assist[]
  flashAssists FlashAssist[]
}

model Kill {
  order    Int
  id       String  @id @default(uuid())
  roundId  String
  round    Round   @relation(fields: [roundId], references: [id])
  killer   String
  killed   String
  weapon   String
  headshot Boolean
}

model Assist {
  order    Int
  id       String @id @default(uuid())
  roundId  String
  round    Round  @relation(fields: [roundId], references: [id])
  assister String
  killed   String
}

model FlashAssist {
  order    Int
  id       String @id @default(uuid())
  roundId  String
  round    Round  @relation(fields: [roundId], references: [id])
  assister String
  killed   String
}

model Scoreboard {
  id             String          @id @default(uuid())
  scoreboardRows ScoreboardRow[]
  matchId        String          @unique
  match          Match?          @relation(fields: [matchId], references: [id])
}

model ScoreboardRow {
  id           String     @id @default(uuid())
  player       String
  kills        Int
  deaths       Int
  assists      Int
  flashAssists Int
  scoreboardId String
  scoreboard   Scoreboard @relation(fields: [scoreboardId], references: [id])
}
